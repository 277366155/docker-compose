
# http节点下，声明共享内存区域，大小为50m
lua_shared_dict redirects 50m;
# http节点下，初始化阶段执行lua脚本内容
init_worker_by_lua_file /usr/local/openresty/nginx/lua/redisfilter.lua;

upstream api-net{
    server 128.0.202.105:1013   weight=100; 
}
upstream api-java{
    server 128.0.255.96:12402   weight=100;
}

server{
    listen 80;
    listen 443 ssl;
    server_name test-api-local.xx.com.cn;
    
    ssl_certificate /etc/nginx/conf.d/apistar.crt;
    ssl_certificate_key /etc/nginx/conf.d/apistar.key;

    access_log /usr/local/openresty/nginx/logs/test-api-local.xx.com.cn.log;

    location /api/v1/{
        set_by_lua_file $backend /usr/local/openresty/nginx/lua/set_upstream_by_uri.lua api-net api-java;
        # 注意：proxy_pass=http://$backend 时，请求http://test-api-local.xx.com.cn/api/v1/ping.html，实际请求的是http://128.0.255.96:12402/api/v1/ping.html
        proxy_pass http://$backend;

        # 注意：proxy_pass=http://$backend/ 时，请求http://test-api-local.xx.com.cn/api/v1/ping.html，实际请求的是http://128.0.255.96:12402/
        # proxy_pass http://$backend/;
    }
    
    # 匹配以/api/v2/开头的请求转向http://128.0.255.96:12402/页面。例如：
    # http://test-api-local.xx.com.cn/api/v2/ping.html 实际请求的是http://128.0.255.96:12402/ping.html
    location /api/v2/{
         proxy_pass http://api-java/;
    }

   # 可在白名单主机上运行定时任务，定时调用/redis接口，用以更新缓存
   location /redis {
        default_type text/html;
        lua_code_cache on;
        charset utf-8;
        # 限制只有指定ip可以访问此地址，用以重读redis配置、更新nginx缓存
        allow 128.0.23.63;
        allow 128.0.255.96;
        deny all;
        content_by_lua_file /usr/local/openresty/nginx/lua/redisfilter.lua;
    }

    location / {       
        default_type text/html;
        # charset utf-8;
        set_by_lua_file $backend /usr/local/openresty/nginx/lua/set_upstream_by_uri.lua api-net api-java;
        #其中jq_one对应着upstream设置的集群名称
        proxy_pass http://$backend;
    }
}
