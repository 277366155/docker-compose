
# http节点下，声明共享内存区域，大小为50m
lua_shared_dict redirects 50m;
# http节点下，初始化阶段执行lua脚本内容
init_worker_by_lua_file /usr/local/openresty/nginx/lua/redisfilter.lua;

upstream api-star-net{
    server 128.0.202.105:1013   weight=100; 
}
upstream api-star-java{
    server 128.0.255.96:12402   weight=100;
}

server{
    listen 80;
    server_name test-api-star-local.td365.com.cn;

    access_log /usr/local/openresty/nginx/logs/test-api-star-local.td365.com.cn.log;

    # 匹配以/td-cloud/operation-service/开头的请求转向http://128.0.255.96:12402/页面。例如：
    # http://test-api-star-local.td365.com.cn/td-cloud/operation-service/ping.html 实际请求的是http://128.0.255.96:12402/ping.html
    location /td-cloud/operation-service/{
         proxy_pass http://api-star-java/;
    }

   # 可在白名单主机上运行定时任务，定时调用/redis接口，用以更新缓存
   location /redis {
        default_type text/html;
        lua_code_cache on;
        charset utf-8;
        # 限制只有指定ip可以访问此地址，用以重读redis配置、更新nginx缓存
        if ($remote_addr !~* "128.0.23.63") {
            return 403;
        }
        content_by_lua_file /usr/local/openresty/nginx/lua/redisfilter.lua;
    }

    location / {       
        default_type text/html;
        # charset utf-8;
        set_by_lua_file $backend /usr/local/openresty/nginx/lua/set_upstream_by_uri.lua api-star-net api-star-java;
        #其中jq_one对应着upstream设置的集群名称
        proxy_pass http://$backend;
    }
}
